class Brewery < ActiveRecord::Base
  include RatingAverage

  has_many :beers, dependent: :destroy
  has_many :ratings, through: :beers

  validates :name, length: { minimum: 1 }, allow_nil: false, uniqueness: true
  validates :year, numericality: { greater_than_or_equal_to: 1042,
                                    only_integer: true }
  validate :vuosi_ei_tulevaisuudessa

  def vuosi_ei_tulevaisuudessa
	if Date.current.year < year
	  errors.add(:year, "Time travel not allowed, year cannot be in future")
	end
  end

  def print_report
    puts name
    puts "established at year #{year}"
    puts "number of beers #{beers.count}"
  end

  def restart
    self.year = 2015
    puts "changed year to #{year}"
  end


end
